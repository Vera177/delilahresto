openapi: 3.0.2
info:
  title: Delilah Resto
  description: "Proyecto para acamica de pedido de restaurantes"
  contact:
    name: Vera Orduna
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Modulo de usuario
  - name: role
    description: Modulo de roles
  - name: product
    description: Modulo de productos
paths:
  /user/login:
    post:
      tags:
        - user
      summary: Endpoint para login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                  example: administrator                
                email:
                  type: string
                  example: administrator@email.com
                  required: true
                password: 
                  type: string
                  example: admin
                  required: true                
      responses:
        200:
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  token:
                    type: string
                  admin:
                    type: boolean
        401:
          description: Usuario no valido
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 401
                  message:
                    type: string
                    example: Usuario o contrase√±a invalido
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /user:
    post:
      tags:
        - user
      summary: Endpoint para crear usuario
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                  example: test
                  required: true
                name:
                  type: string
                  example: testing
                  required: true
                email:
                  type: string
                  example: test@test.com
                  required: true
                password: 
                  type: string
                  example: 123456
                  required: true
                phone: 
                  type: string
                  example: 42518888
                  required: true
                address:
                  type: string
                  example: Avenida siempre viva 123
                  required: true
                roles_id:
                  type: number
                  example: 1
      responses:
        201:
          description: Usuario creado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: Usuario creado!
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - user
      summary: Endpoint para obtener usuario
      responses:
        200:
          description: Obtiene todos los usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: 200
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - Authorization: []
  /product/{id}:
    patch:
      tags:
        - product
      summary: Endpoint para actualizar producto
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tortilla de papa
                  required: true
                price:
                  type: number
                  example: 400
                  required: true
                url_image:
                  type: string
                  example: https://www.casanhelp.com.ar/wp-content/uploads/2020/05/bagel-de-salmon-169.jpg
      responses:
        201:
          description: Producto actualizado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: Producto actualizado!
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /product/:
    post:
      tags:
        - product
      summary: Endpoint para crear productos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bacalao
                  required: true
                price:
                  type: number
                  example: 300
                  required: true
                url_image:
                  type: string
                  example: https://www.casanhelp.com.ar/wp-content/uploads/2020/05/bagel-de-salmon-169.jpg
      responses:
        201:
          description: Producto creado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: Producto creado!
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    error:
      type: object
      properties:
        status:
          type: number
          example: 500
        message:
          type: string
          example: Internal server error
    user:
      type: object
      properties:
        id:
          type: number
        user_name:
          type: string
        name:
          type: string
        email:
          type: string
        password: 
          type: string
        phone: 
          type: string
        address:
          type: string
        role:           
            $ref: '#/components/schemas/role'
    role:
      type: object
      properties:
        id:
          type: number
        name:
          type: string

  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT